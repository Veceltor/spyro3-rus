#summary Синтаксис WIKI и HTML, используемый на Google Code
#labels Featured

= Помощь по синтаксису страниц Google Code =

<p align="right"> _by aleksusklim_ </p>

Существует полноценная [http://code.google.com/p/support/wiki/WikiSyntax статья] и [http://code.google.com/p/support/wiki/WikiFAQ FAQ] на английском языке, посвящённые синтаксису Вики-страниц.

Несмотря на это, я решил описать с примерами тут коротко и понятно всё функции, которые мы будем использовать в процессе создания страниц, опросов и комментариев.

<wiki:toc max_depth="3" />

<br/>

= Разметка Wiki =

<br/>

== Область применения==

<br/>

При создании/редактировании wiki-страниц. В комментариях к страницам и опросам.

== Директивы ==

`#summary …` = Основное название страницы, её мысль одной строкой. Встречается под заголовком, в списках страниц и при наведении на ссылку курсора.

<br/>

== Начертание ==

*Жирный* = На концах <font color="red">звёздочки</font> (Shift + 8): «`*Жирный*`»

_Курсив_ = На концах <font color="red">нижнее подчёркивание</font> (Shift + -,,минус,,) : «`_Курсив_ `»

~~Зачёркнутый~~ = На концах <font color="red">по две тильды</font> (Shift + Ё,,англ.,,) : «`~~Зачёркнутый~~`»

Нижний ,,индекс,, H,,2,,SO,,4,, = Обрамить <font color="red">парой запятых</font> : «`Нижний ,,индекс,, H,,2,,SO,,4,,`»

Верхний ^индекс^ a^2^+2ab+b^2^ = Обрамить <font color="red">шапочкой-крышкой</font> (Shift+6,,англ.,,) : «`Верхний ^индекс^ a^2^+2ab+b^2^`»

`^Отключить^ *любое* _форматирование_` = Обрамить <font color="red">знаком ударения</font> (Ё,,англ.,,) : «{{{`Отключить *любое* _форматирование_`}}}»

<br/>

== Абзацы ==

Абзац автоматически создаётся после разделения текста пустой строкой. Иначе (при единичном «Enter» сдвиге строки) текст продолжится в линию. Это позволяет не удалять случайные переносы строк, которые иногда появляются в «Блокноте» в границах окна при включённом «переносе по словам».

Чтобы отделить цитату или выдвинуть текст вправо, начните каждую строку с нескольких пробелов.

Горизонтальная линия создаётся написанием «<font color="red"><b>----</b></font>» отдельной строкой.

*Пример:*

{{{
----
Первая строка.
Вторая строчка без дополнительного разделителя.

Правильный абзац.
   Выдвинутая цитата.
Другой абзац.
----
}}}

*Результат:*

----
Первая строка.
Вторая строчка без дополнительного разделителя.

Правильный абзац.
   Выдвинутая цитата.
Другой абзац.
----

<br/>

== Многострочный код ==

Это может быть и цитата. Заключите строки любого текста между блоками <font color="red"><b>`{{{`</b></font> и <font color="red"><b>`}}}`</b></font>. (Shift + Х,,англ.,, , Shift + Ъ,,англ.,,) Некоторые слова будут автоматически подсвечены в стиле С++. Переносы строк учитываются сразу, а вот длинные строчки могут вызывать появление нежелательной полосы прокрутки.

<br/>

*Пример:*

<br/>

<pre>{{{
Форматирование *жирным* может находиться в _курсивном_ тексте:
_Но вы не увидите *этого* в данной строке_;
*_Наоборот_, и даже ~~так~~*! Many English words (such as #define, begin, new)
 and "quoted" 'text' will have different color. 
}}}</pre>

<br/>

*Результат:*

<br/>

{{{
Форматирование *жирным* может находиться в _курсивном_ тексте:
_Но вы не увидите *этого* в данной строке_;
*_Наоборот_, и даже ~~так~~*! Many English words (such as #define, begin, new)
 and "quoted" 'text' will have different color. 
}}}

<br/>

Одну строку или слово можно также отделить взятием в `{{{` и `}}}`, тогда подсвечивания не произойдёт. Например «`{{{`(2`^`2)`^`4 `*`0,5`*` 0,5=64`}}}`» выдаст «{{{(2^2)^4 *0,5* 0,5=64}}}» вместо «(2^2)^4 *0,5* 0,5=64»

<br/>

== Заголовки ==

Обычно применяются три уровня заголовков. Главные, подзаголовки и прочие заголовки. Синтаксис такой:

{{{
= Раздел =
== Тема ==
=== Параграф ===
}}}

Надпись «Раздел» будет выглядеть как фраза «Разметка Wiki» в начале этой страницы.
Надпись «Тема» – как тут чуть выше «Заголовки».
Ну а третий уровень «Параграф» – как «Особенности заголовков» в следующем абзаце.

Главное: заголовки – это не столько форматирование текста, сколько его логическое разделение. У них есть особенности:

=== Особенности заголовков ===

 # Каждый заголовок является якорем страницы. По его имени легко можно перейти к нижеследующему тексту. Узнать якорь можно, наведя курсор на правый край надписи.
 # Заголовки выделяются жирным и требуют для себя отдельной строки, поэтому их нельзя вставлять, например, в таблицы.
 # Содержание страницы формируется автоматически по заголовкам на ней. Поэтому и текст, и расположение заголовков должно быть логичным и удобным, а также они не должны повторяться.
 # Повторить внешний облик заголовка, но остаться свободным от его свойств можно через [http://code.google.com/p/spyro3-rus/w/edit/HelpWikiHtml#Заголовки_(html) Html-заголовки] (ниже)

<br/>

== Списки ==

Поддерживаются два типа списков: нумерованные и маркированные. Чтобы создать список, нужно каждый элемент начать с пробела и значка «<font color="red"><b>`*`</b></font>» или «<font color="red"><b>`#`</b></font>». Следующий уровень вложенности обозначается дополнительным пробелом каждой строки этого уровня.

Маркер – круг; нумерация – цифры (автоматически).

*Пример:*

{{{
Ссылки страниц проекта:
 # Project Home:
  * Содержит общую информацию
  * Раздел Featured с главными страницами
  * Есть ссылки на внешние ресурсы
 # Downloads:
  * Список выложенных файлов
  * Доступ для скачивания или добавления
 # Wiki:
  * Список всех Вики-страниц 
 # Issues:
  * Все текущие открытые и закрытые вопросы
 # Source:
  * Основное хранилище кода
  * Доступ через веб-интерфейс
 # Administer:
  * Настройка свойств проекта:
   # Описание
   # Шаблоны
   # Разрешения и условия доступа
  * Актуален только для владельцев
}}}

*Результат:*

Ссылки страниц проекта:
 # Project Home:
  * Содержит общую информацию
  * Раздел Featured с главными страницами
  * Есть ссылки на внешние ресурсы
 # Downloads:
  * Список выложенных файлов
  * Доступ для скачивания или добавления
 # Wiki:
  * Список всех Вики-страниц 
 # Issues:
  * Все текущие открытые и закрытые вопросы
 # Source:
  * Основное хранилище кода
  * Доступ через веб-интерфейс
 # Administer:
  * Настройка свойств проекта:
   # Описание
   # Шаблоны
   # Разрешения и условия доступа
  * Актуален только для владельцев

<br/>

== Ссылки ==

На внутренние страницы проекта: <b>`[`ИмяСтраницы`]`</b>.

Можно с описанием через пробел: <b>`[`ИмяСтраницы Описание`]`</b>.

Даже на якорь-заголовок <b>`[`ИмяСтраницы#Якорь Описание`]`</b>.

На внешние страницы интернета: <b>{{{http://Прямой.Адрес/}}}</b>.

С описанием: <b>`[http://Прямой.Адрес/` Описание`]`</b>.

Вставить картинку – просто ссылка на неё: <b>{{{http://Прямой.Адрес/Путь/Файл.jpg}}}</b>

Картинка-ссылка: <b>{{{[http://ПолнаяСсылка/ http://СсылкаНаКартинку/]}}}</b>.

Если изображение выдаётся не прямой ссылкой, добавьте «<b>&anything.jpg</b>» в конец.

Примечания:
 * Надпись, совпавшая с именем страницы _может_ стать ссылкой. Для отмены поставьте «<font color="red"><b>!</b></font>ИмяСтраницы» (с восклицательным знаком перед словом).
 * Буква «r» и цифра после неё преобразуются в ссылку на ревизию. Этого не исправить.
 * Написание «`issue` 123» (номер через пробел) превратится в ссылку на опрос. Причём если он будет уже закрыт, ссылка станет зачёркнутой.

*Примеры:*

<br/>

{{{
[MemberListRules]

[RepositoryRules Правила хранилища]

[http://code.google.com/p/spyro3-rus/w/edit/HelpWikiHtml#Списки Создание списков на страницах]

http://spyro-realms.com

[http://spyro-realms.com/forum Наш форум]

http://code.google.com/p/spyro3-rus/logo?anything.png

[http://spyro-realms.com http://www.spyro-realms.com/_ph/34/2/872741416.jpg]
}}}

*Результат:*

<br/>

[MemberListRules]

[RepositoryRules Правила хранилища]

[http://code.google.com/p/spyro3-rus/w/edit/HelpWikiHtml#Списки Создание списков на страницах]

http://spyro-realms.com

[http://spyro-realms.com/forum Наш форум]

http://code.google.com/p/spyro3-rus/logo?anything.png

[http://spyro-realms.com http://www.spyro-realms.com/_ph/34/2/872741416.jpg]

<br/>

== Таблицы ==

О, это самое интересное! Вики-таблицы невероятно просты в использовании.
Строки – это строки, а столбцы разделяются двумя вертикальными чертами «<font color="red"><b>||</b></font>».

*Пример:*

{{{
     Разрешения для групп пользователей проекта по умолчанию:
|| *_Действие_* || *Гость* || *Коммитер* || *Владелец* ||
||_Просмотр_||Может||Может||Может||
||_Создать опрос_||Может||Может||Может||
||_Ответить в опросе_||Может||Может||Может||
||_Добавить комментарий_||Может||Может||Может||
||_Редактировать страницу_||~~Запрет~~||Может||Может||
||_Изменить опрос_||~~Запрет~~||Может||Может||
||_Вносить файлы в хранилище_||~~Запрет~~||Может||Может||
||_Выкладывать файл_||~~Запрет~~||Может||Может||
||_Редактировать закачки_||~~Запрет~~||Может||Может||
||_Удалять закачки_||~~Запрет~~||~~Запрет~~||Может||
||_Удалить опрос_||~~Запрет~~||~~Запрет~~||Может||
||_Удалять комментирии_||~~Запрет~~||~~Запрет~~||Может||
||_Менять чужие привилегии_||~~Запрет~~||~~Запрет~~||Может||
}}}

*Результат:*

     Разрешения для групп пользователей проекта по умолчанию:
|| *_Действие_* || *Гость* || *Коммитер* || *Владелец* ||
||_Просмотр_||Может||Может||Может||
||_Создать опрос_||Может||Может||Может||
||_Ответить в опросе_||Может||Может||Может||
||_Добавить комментарий_||Может||Может||Может||
||_Редактировать страницу_||~~Запрет~~||Может||Может||
||_Изменить опрос_||~~Запрет~~||Может||Может||
||_Вносить файлы в хранилище_||~~Запрет~~||Может||Может||
||_Выкладывать файл_||~~Запрет~~||Может||Может||
||_Редактировать закачки_||~~Запрет~~||Может||Может||
||_Удалять закачки_||~~Запрет~~||~~Запрет~~||Может||
||_Удалить опрос_||~~Запрет~~||~~Запрет~~||Может||
||_Удалять комментирии_||~~Запрет~~||~~Запрет~~||Может||
||_Менять чужие привилегии_||~~Запрет~~||~~Запрет~~||Может||

<br/>

= Разметка Html =

<br/>

== Область применения (html) ==

Только при создании и редактировании wiki-страниц.
В комментариях HTML теги запрещены и отображаться не будут!

То есть работает только в теле WIKI страниц.

== Правила ==

Каждый тег необходимо заключать в угловые скобки (знаки больше и меньше). Парные теги *обязательно* должны закрываться (косая черта деления после первой скобки). Регистр букв не различим.

Например: «{{{<U>Это надо<br/>запомнить!</u>}}}»

== Что дают теги? ==

Это дополнительные возможности форматирования текста. Некоторые методы приводят к аналогичному результату как и Wiki разметка, некоторые лишь дополняют её. Однако есть и такие теги, которые реализуют уникальные действия, без которых иногда нельзя обойтись.

== Взаимодействие с WIKI ==

Все теги хорошо дружат с Вики разметкой и даже дополняют её, поэтому их можно свободно использовать в Wiki списках или таблицах. И наоборот, внутри чистых Html структур почли всегда работают многие Вики элементы (за исключением заголовков и некоторых других вариаций, особенно там, где технически невозможно выполнить принудительный перенос строки)

== Атрибуты ==

Каждый тег может иметь несколько атрибутов. Это строки, которые располагаются внутри открывающего тега через пробел после его названия; имеют знак равенства, за которым следует их значение, обязательно заключённое в двойные кавычки. Есть общие (правда скудные и почти бесполезные) атрибуты для всех тегов, но для некоторых определены собственные уникальные параметры внешнего вида или свойств.

Простейший пример атрибута – ссылка `<a href="http://spyro-realms.com">Всё о дракончике Спайро</a>`. Здесь «href» – фиксированное имя атрибута, а ссылка в кавычках – его значение. На форуме мы все пользовались похожей структурой при цитировании, например «`[quote=aleksusklim]Клименко Алексей, 25 Кбит/сек.[/quote]`», где строка после равенства играет роль значения. Однако в HTML атрибуты пишутся только после самого тега (в любом порядке), а их значения всегда берутся в кавычки.

<br/>

== Форматирование ==

Текст нужно располагать внутри тегов, где показано «…». Вертикальная черта здесь визуально отделяет аналогичные теги, приводящие к абсолютно одинаковому результату:

{{{<B> … </B> | <STRONG> … </STRONG>}}} – жирное начертание;

{{{<I> … </I> | <EM> … </EM> | <VAR> … </VAR>}}} – курсивное начертание;

{{{<S> … </S> | <STRIKE> … </STRIKE>}}} – зачёркивание текста;

{{{<SUP> … </SUP>}}} – верхний индекс;

{{{<SUB> … </SUB>}}} – нижний индекс;

Как видите, эти теги полностью заменяются Вики-синтаксисом, однако многим пользователям форума HTML вариант может понравиться больше, потому что основные теги очень часто идентичны BB кодам, только записываются не в квадратных, а угловых скобках:

|| Wiki: || Результат: || Html || Результат: || Форумный BB-код аналог (тут не работает!) ||
|| `*жирный*` || *жирный* || `<b>жирный</b>` || <b>жирный</b> || `[b]жирный[/b]` || 
|| `_курсив_` || _курсив_ || `<i>курсив</i>` || <i>курсив</i> ||`[i]курсив[/i]` ||
|| `~~перечёркнут~~` || ~~перечёркнут~~ || `<s>перечёркнут</s>` || <s>перечёркнут</s> ||`[s]перечёркнут[/s]` ||
|| `0^верхний^0` || 0^верхний^0 || `0<sup>верхний</sup>0` || 0<sup>верхний</sup>0 ||`0[sup]верхний[/sup]0` ||
|| `0,,нижний,,0` || 0,,нижний,,0 || `0<sub>нижний</sub>0` || 0<sub>нижний</sub>0||`0[sub]нижний[/sub]0`||

Чем же тогда Html лучше? А тем, что по тегам всегда сразу понятно, какой именно текст окажется так отформатирован. А вот отследить подчёркивания и звёздочки Вики бывает иногда трудновато! А ещё очень часто Wiki ведёт себя довольно капризно, то выделяя лишнее, то наоборот, отказываясь работать (это постоянно случалось пока я делал эту страницу, уж поверьте мне!) Теги HTML в этом отношении гораздо стабильнее, и гарантированно будут воздействовать только на нужный текст.

Недостаток тегов в том, что из-за них текст может стать трудночитаемым, особенно если форматирование богато различными элементами, которые то и дело открываются и закрываются. Второй же дефект Html – абсолютно все парные теги должны быть закрыты, иначе появятся ошибки. Нельзя оставлять `<P> <LI> <TD>` и тому подобные элементы открытыми (чередующимися), как при обычном веб-программировании.

<br/>

== Списки (html) ==

На вид списки, созданные с помощью тегов, кажутся более сложными и непонятными, но зато дают гибкое редактирование содержимого. Основное преимущество в том, что код может храниться в одной строке, что позволяет, например, встраивать списки внутрь ячеек Вики-таблицы.

Тег элемента списка: <b> `<LI>…</LI>` </b>. Элементы перечисляются подряд, без ничего между ними, однако допустимо начинать новый элемент с новой строки (или оставлять «`</li><li>`» (закрыл-открыл) на концах):

{{{
<li>первый</li><li>второй</li><li>третий</li>

<li>первый</li>
<li>второй</li>
<li>третий</li>

<li>
первый</li><li>
второй</li><li>
третий</li>
}}}

Правда одних только пунктов списка для его полного определения маловато. Следует задать основной общий тег, которой отличит нумерованный список от маркированного.

<pre>
<UL><LI>…</LI>…</UL> – маркированный (Wiki аналог – «*»)
<OL><LI>…</LI>…</OL>` – нумерованный (Wiki аналог – «#»)</pre>

И даже на этом настройки не заканчиваются! Маркированному списку можно предать вид значка каждой строки. Он зависит от браузера, но обычно маркер похож либо на жирную точку, либо на тонкий кружок, либо на чёрный квадратик. Это определяется атрибутом «<b>type=</b>», после которого следуют такие значения: *"disc"*, *"circle"* или *"square"*.

С нумерованными списками всё ещё веселее. Во-первых, позволено задать стартовый номер исчисления, переопределив единицу по умолчанию. За это отвечает атрибут «<B>start=</B>», а в качества значения выступает число, всегда только число ("99", "5") но обязательно в кавычках. А во-вторых, можно задать другой алфавит нумерации, например, римский. Или же обозначать строки буквами. Значением атрибута «<B>type=</B>» в таких случаях должен быть знак, один из следующих: *"1"* (арабские по умолчанию, 1234567890), *"i"* (маленькие римские, ivxlcdm) *"I"* (заглавные римские, IVXLCDM) *"a"* (строчные латинские буквы, abcdefgh…) *"A"* (прописные латинские буквы, ABCDEFGH…)

Внутрь контейнеров списков (`<UL>` и `<OL>`) допускается заносить только контейнеры элементов списка (`<LI>`). А уже в них можно встраивать новые списки:

{{{
<ul type="square"><li>
Квадраты
</li><li>
Буквенные:
<ol start="99" type="A"><li>
Тут будет написано «CU»
</li><li>
Римские:
<ol start="99" type="i"><li>
А здесь – «xcix»
</li></ol></li></ol></li></ul>
}}}

*Результат:*

<ul type="square"><li>
Квадраты
</li><li>
Буквенные:
<ol start="99" type="A"><li>
Тут будет написано «CU»
</li><li>
Римские:
<ol start="99" type="i"><li>
А здесь – «xcix»
</li></ol></li></ol></li></ul>

<br/>

== Заголовки (html) ==

Как и для Wiki, есть возможность через теги задавать те же три уровня заголовков. Выглядеть они будут точно так же, но станут простым текстом. То есть сослаться по якорю на HTML заголовок невозможно, но иногда это и к лучшему. Поэтому, если вам хочется написать жирный текст, но при этом он не считается логическим заголовком, лучше употребить теги *`<H1>…</H1>, <H2>…</H2>, <H3>…</H3>`* Вот так:

{{{
<h1>Раздел</h1>
<h2>Тема</h2>
<h3>Параграф</h3>
}}}

Сравните с [http://code.google.com/p/spyro3-rus/w/edit/HelpWikiHtml#Списки заголовками Вики]

Кстати, их как и у Wiki лучше не засовывать куда не следует (в таблицы, отцентровывания или списки) – лучше уж применять FONT, о котором написано ниже.

<br/>

== Изображения и Ссылки ==

В html за это уже отвечают разные теги. Любые ссылки делаются единственным способом, в теге *`<A> … </A>`*, обязательный атрибут которого – «href=». После него указывается URL адрес страницы в любом формате, но обычно это абсолютный адрес, начинающийся с «`http://`», после которого следует полный путь к нужной странице, картинке, файлу или оканчивается запросом к серверу (наподобие «php?»). Между половинками тега (где многоточие) вводится пояснительный текст. Несравненное преимущество в том, что кроме простого текста туда преспокойно помещаются не только изображения, но и вообще любые другие теги!

Картинки вставляются немного по-другому. Это непарный тег (который не нужно закрывать) *`<IMG/>`*. Сам по себе он не заработает, поэтому следует использовать дополнительные атрибуты:

|| *src=* ||Ссылка на картинку, путь к изображению.||
|| *alt=* ||Название, которое отобразится в случае, если файл не загрузится в браузер.||
|| *border=* ||Толщина рамки в пикселях. Чтобы убрать её (особенно если это ссылка, располагаемая «<i>`<a href="…"><img src="…"/></a>`</i>»), напишите «<i>border="0"</i>»||
|| *align=*||Положение в тексте (по умолчанию – от базовой нижней линии текущей строки). Значения: <dl><dt>*"middle"*</dt><dd>изображение будет отцентровано по середине строки без сдвига вправо-влево;</dd><dt>*"left"*</dt><dd>картинка окажется слева, текст начнёт обтекать её справа;</dd><dt>*"right"*</dt><dd>по правому краю окна, текст будет обтекать слева;</dd></dl>|| 
|| *width=* || Длина изображения в пикселях. Если задаётся явно, то картинка масштабируется браузером так, чтобы втиснуться в отведённые рамки;||
|| *height=* || Высота изображения, работает также как и длина. Но если задан только один из них (или длина или высота), то картинка изменяет размер равномерно; поэтому имеет смысл использовать только один из этих двух атрибутов.||

{{{
<img src="http://code.google.com/p/spyro3-rus/logo?nonsense.png" alt="Наш логотип" border="2" width="150" height="100"  align="left"/>
<img src="http://code.google.com/images/code_sm.png" alt="Лого Google Code" border="0" width="150" height="100" align="right"/>
Можно добиться
<img src="http://www.spyro-realms.com/_ph/34/2/872741416.jpg" width="25"/>
привлекательного
<img src="http://www.spyro-realms.com/_ph/34/2/872741416.jpg" align="middle" width="25"/>
взаимного расположения

<a href="http://www.spyro-realms.com/_ph/34/2/872741416.jpg">нескольких картинок.</a>
}}}

*Результат:*

<img src="http://code.google.com/p/spyro3-rus/logo?nonsense.png" alt="Наш логотип" border="2" width="150" height="100"  align="left"/>
<img src="http://code.google.com/images/code_sm.png" alt="Лого Google Code" border="0" width="150" height="100" align="right"/>
Можно добиться
<img src="http://www.spyro-realms.com/_ph/34/2/872741416.jpg" width="25"/>
привлекательного
<img src="http://www.spyro-realms.com/_ph/34/2/872741416.jpg" align="middle" width="25"/>
взаимного расположения

<a href="http://www.spyro-realms.com/_ph/34/2/872741416.jpg">нескольких картинок.</a>

<br/>

<br/>

== Прочие теги ==

Как и для Вики, можно выделить часть текста как цитату в Html. Причём это даже удобнее, потому что не требуется начинать каждую строку с пробелов. Простой тег с самым длинным именем – *`<blockquote> … </blockquote>`*

Выделение блока трёх фигурных скобок, которое подсвечивает слова и затемняет фон у Вики, также реализуемо тегом *`<code> … </code>`*

Можно попытаться отменить WIKI и HTML синтаксис так, чтобы слова не подсвечивались, но не строкой, а сразу блоком (что невозможно в чистом Вики). Это делает тег *`<pre> … </pre>`*, но случается, что он иногда врёт с концами строчек, то игнорирует их, то ставит лишние.

Пожалуй здесь же упомяну абсолютно бесполезный тег `<div> … </div>`, который не делает ничего (потому что в Google Code запрещены пользовательские стили… странно, что тег они оставили) и `<q> … </q>`, который заменяется на кавычки «"» с обеих сторон (причём независимо от языка и атрибута «lang=»!)

<br/>

= Новые возможности =

<br/>

== Переносы ==

В HTML есть универсальный непарный тег переноса строки *`<br/>`*. Google Code почему-то интерпретирует его немного иначе, превращая не в просто перенос, а в целое смещение нижеследующего текста! То есть пустых строчек у вас не будет, зато пространство окажется свободным:

{{{
----
Раз,

<br/>

Два,

<br/>

<br/>

Три!
----
}}}

<br/>

*Результат:*

<br/>

----
Раз,

<br/>

Два,

<br/>

<br/>

Три!
----

Его ещё можно употреблять и внутри Вики-таблиц, чтобы начать с новой строки в текущей ячейке.

<br/>

== Подчёркивание ==

Странно, но в Wiki отсутствует способ подчеркнуть текст! Зато в Html он есть, это тег *`<U> … </U>`*, также похожий на BB-код с форума.

Работает как обычно: 
«{{{ *хочу _подчеркнуть <u>этот_ текст!</u>* }}}»
выдаст: 
« *хочу _подчеркнуть <u>этот_ текст!</u>* »

<br/>

== Списки определений ==

Их также называют списками терминов. От обычных списков они отличаются тем, что каждый пункт по-своему озаглавлен, а ещё они располагаются лесенкой.

Странно, но Google Code отображает их довольно скудно, без особого форматирования. Строчки просто будут по-разному выдвинуты. Однако нужный вид можно предать через другие теги.

Список открывается тегом *`<DL> … </DL>`*. Внутри следуют пары  *`<DT> … </DT><DD> … </DD>`*. Между DT записывается название (термин), а после него в DD – определение этого термина. Никаких атрибутов задавать не требуется. Пример:

{{{
-----
<dl><dt>
Жирность текста:
</dt><dd>
Звёздочки на краях или тег B
</dd><dt>
Курсивное начертание:
</dt><dd>
Нижнее подчёркивание на краях или тег I
</dd><dt>
Зачёркивание слова:
</dt><dd>
Две тильды на краях или тег S
</dd><dt>
Подчёркивание текста:
</dt><dd>
Только тег U
</dd></dl>
-----
}}}

*Результат:*

-----
<dl><dt>
Жирность текста:
</dt><dd>
Звёздочки на краях или тег B
</dd><dt>
Курсивное начертание:
</dt><dd>
Нижнее подчёркивание на краях или тег I
</dd><dt>
Зачёркивание слова:
</dt><dd>
Две тильды на краях или тег S
</dd><dt>
Подчёркивание текста:
</dt><dd>
Только тег U
</dd></dl>
-----

<br/>

== Выравнивание абзацев ==

Куда без этого. Чтобы отцентровать абзац, либо выровнять по правому краю или даже по ширине, необходимо поместить весь выравниваемый текст и код в контейнер *`<P> … </P>`*. Его атрибут «<b>align=</b>» показывает способ выравнивания и может равняться только следующим константам: "_center_" (по центру), "_right_" (по правому краю) и "_justify_" (по ширине). Например:

{{{
<p align="justify">К сожалению, пока я экспериментировал над
вложенными выравниваниями, я пришёл к удручающим выводам
о том, что вкладывание в большой контейнер align="center" одну
строку с align="left" (что логично делать) может стать причиной
дальнейшего неадекватного поведения Google Code – он либо отобразит
всё по левому краю, либо начнёт выдавать ошибки, что теги не закрыты.
Уж лучше каждый раз открывать новый P и закрывать старый,
чем парится со вложенными пирамидами.</p>

<p align="right">Ещё как оказалось, здешний парсер
обожает псевдозакрытые непарные теги типа
{{{<br /> или <img />}}}, которые должны оканчиваться косой
чертой перед закрывающейся угловой скобкой.</p>

<p align="center">Раз на раз не приходится – иногда хоть вся
страница кишит BRками без проблем, а иногда один единственный
забытый слеш становится причиной постоянных поисков ошибки.</p>

<p>Ах да, теги лучше не переносить на новые строки
(даже единственным одиночным Enter) – если перенос
попадёт внутрь угловых скобок (между атрибутами),
тег скорее всего работать не станет.</p>
}}}

*Результат:*

<p align="justify">К сожалению, пока я экспериментировал над
вложенными выравниваниями, я пришёл к удручающим выводам
о том, что вкладывание в большой контейнер align="center" одну
строку с align="left" (что логично делать) может стать причиной
дальнейшего неадекватного поведения Google Code – он либо отобразит
всё по левому краю, либо начнёт выдавать ошибки, что теги не закрыты.
Уж лучше каждый раз открывать новый P и закрывать старый,
чем парится со вложенными пирамидами.</p>

<p align="right">Ещё как оказалось, здешний парсер
обожает псевдозакрытые непарные теги типа
{{{<br /> или <img />}}}, которые должны оканчиваться косой
чертой перед закрывающейся угловой скобкой.</p>

<p align="center">Раз на раз не приходится – иногда хоть вся
страница кишит BRками без проблем, а иногда один единственный
забытый слеш становится причиной постоянных поисков ошибки.</p>

<p>Ах да, теги лучше не переносить на новые строки
(даже единственным одиночным Enter) – если перенос
попадёт внутрь угловых скобок (между атрибутами),
тег скорее всего работать не станет.</p>

<br/>

== Шрифт и цвет ==

О, ну наконец-то! Как менять размер текста и его цвет? Оказывается можно! Но только через Html. Универсальный тег – *`<FONT> … </FONT>`*, сам по себе не делает ничего. За всё отвечают атрибуты: (достаточно указать только необходимые, потому что по умолчанию сохраняется наследованное от родительского тега значение)
|| *face=* ||Тип шрифта. Его имя, например "Arial" (обычный текст) или "Courier New"||
|| *size=* ||Размер в условных единицах от "1" до "7" (обычный текст имеет размер "2")||
|| *color=* ||Цвет как слово ("red", "green", "blue") или в формате "#RRGGBB"||

Пример:

{{{
<font face="Tahoma"><font size="7" color="red">Каждый</font><br/>
<font size="6" color="orange">Охотник</font><br/>
<font size="5" color="#AAAA00">Желает</font><br/>
<font size="4" color="green">Знать,</font><br/>
<font size="3" color="#00AAAA">Где</font><br/>
<font size="2" color="blue">Сидит</font><br/>
<font size="1" color="#AA00AA">Фазан!</font></font><br/>
}}}

<font face="Tahoma"><font size="7" color="red">Каждый</font><br/>
<font size="6" color="orange">Охотник</font><br/>
<font size="5" color="#AAAA00">Желает</font><br/>
<font size="4" color="green">Знать,</font><br/>
<font size="3" color="#00AAAA">Где</font><br/>
<font size="2" color="blue">Сидит</font><br/>
<font size="1" color="#AA00AA">Фазан!</font></font><br/>

<br/>

== Всплывающие подсказки ==

Их можно добавлять абсолютно ко всему. А знаете, что самое интересное? Что писать можно ОЧЕНЬ много текста! И применять его хоть к одному знаку, хоть к целой таблице.

Удобно пользоваться тегом *`<SPAN> … </SPAN>`*, в который следует вставить атрибут _title="Надпись"_. Всё что помещено в тег будет вызывать подсказку при наведении.

Мало того, этот атрибут *title=* можно ещё и добавлять к <u>любому</u> другому тегу! Вложенные подсказки перекрывают внешние, что бывает очень удобно. С их помощью, например, можно встраивать предложения в ячейки таблицы, которые будут видимы только при наведении, не раздвигая содержимое.

Пример:
{{{
<span title="Наведите мышь, чтобы прочесть">
Подсказки:
||<b title="Появляются лишь при наведении; легко добавляются; не занимают место на странице; не видны изначально; автоформатируются браузером.">Преимущества</b>||<u title="Нельзя настроить ни цвет, ни шрифт, ни вид; никаких специальных символов – кавычек, тегов, переносов; пользователь не сможет выделить и скопировать текст."><i>Недостатки</i></u>||
</span>
}}}


*Результат:*

<span title="Наведите мышь, чтобы прочесть">
Подсказки:
||<b title="Появляются лишь при наведении; легко добавляются; не занимают место на странице; не видны изначально; автоформатируются браузером.">Преимущества</b>||<u title="Нельзя настроить ни цвет, ни шрифт, ни вид; никаких специальных символов – кавычек, тегов, переносов; пользователь не сможет выделить и скопировать текст."><i>Недостатки</i></u>||
</span>

== Таблицы (html) ==

А вот знаете, я не собираюсь рассказывать о Html таблицах! Нам Вики механизма с лихвой хватит…

В тегах всё трудно. Трудно и неоправданно слабо. Таблицы не раздвижные всё равно – если вы поместите в три ячейки по горизонтали изображения по 640 пикселей в ширину – Google Code внаглую их сам сплющит, чтобы уместить в поле страницы. Нет шансов раздвинуть содержимое…

Единственное весомое преимущество HTML таблиц – возможность объединять ячейки. Хотя я даже его не проверял и не хочу.

Мы ведь обойдёмся без этого?

Также предлагаю забыть о «Gadgets», «Videos», «Side navigation» и «Localizing Wiki Content».

Оставим только «Table of Contents» – оглавление. Автоссылки на якоря-заголовки страницы. Поместите директиву «{{{<wiki:toc max_depth="3" />}}}» в начало страницы если нужно (выглядит так как в шапке этой).