<html><head><meta charset="utf-8"><link rel="stylesheet" type="text/css" href="..\encyclopedia.css"><script type="text/javascript" src="..\encyclopedia.js"></script></head><body onload="page();"><xmp>

Я взломал модели на 85%! 
Я разгадал всю структуру букв. Я долго копошился в WinHex, исследовал разные варианты. Рассматривал извлечённые через ModelFileUnPacker модели. 
Находил различия. Определял значение тех или иных частей. 

Оказалось, файл модели состоит из четырёх частей – заголовка, шапки, вершин, непонятной-фигни и полигонов. Причём непонятная-фигня равна «7F-7F-7F-00» у всех тех моделей букв, которые я смог обработать. 

Итак, формат: 

Заглавие: 
1 байт – количество вершин (<128) 
1 байт – количество полигонов. 
1 байт – флаг непонятно чего (0F/0C) 
1 байт – FF. 
Адреса: 
4 байта – адрес начала описаний вершин. 
4 байта – адрес начала какой-то ерунды. 
4 байта – адрес начала описаний полигонов. 
Список вершин: (структуры по 3 байта) 
1 байт – Z координата (от экрана вглубь). 
1 байт – X координата (по экрану вправо). 
1 байт – Y координата (по экрану вниз). 
{списки вершин занимают «3*(кол-во вершин)» раз + дополняются нулями до mod4} 
~фигня «7F-7F-7F-00» сколько-то раз~ 
Список полигонов: (структуры по 8 байт) 
4 байта разбиваются на 32 бита: 
>2 бита – флаги; 
>7 бит – номер первой вершины; 
>7 бит – номер второй вершины; 
>7 бит – номер третьей вершины; 
>7 бит – номер четвёртой вершины; 
>2 бита – холостые. 
1 байт – холостой. 
3 байта – координаты вектора нормали полигона. 
{списки полигонов занимают «8*(кол-во полигонов)» раз} 

4 байта полигона выглядят так: 
11111100-22222221=43333333-00444444 

…Да, долго же мне пришлось находить эти семёрки бит. Зато всё работает! 
Кстати, адреса структур в самом файле считаются относительно начала файла (реальный offset), а в ОЗУ эмулятора уже являются абсолютными адресами с «80…». Дампить память было удобно… 
XYZ направления осей координат – когда на экране рисуется меню. То есть X идёт вправо (7F – крайний правый, 80 – крайний левый, 00 – центр, 10 – немного правее, F0 –немного левее, ну ясно же?); Y – вертикаль, растёт вниз (7F самый нижний, 80 – самый верхний, и.т.д); Z движется вглубь экрана (7F далеко, 80 близко). 
Координаты вектора нормали я не могу сформулировать, потому что полтора часа тыркал их методом подбора, пока не нашёл нужную комбинацию… 

Биты флагов портят отображение модели. Не знаю, что они делают. Можно ещё поэкспериментировать… 
Зато я понял, почему некоторые полигоны у меня в прошлый раз тянулись к рогам – потому что я видимо поставил слишком высокий номер вершины, а вершина с таким номером есть только у другой модели. (Они, похоже, сбрасываются в массив, который, естественно, не очищается между.) 
Вопрос об анимации остаётся открытым, но ясно, что движение не «вшито» в модели, а накладывается поверх чем-то другим. 

</xmp></body></html>